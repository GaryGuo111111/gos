<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taimei.gos.mapper.OrderGoodsMapper">
  <resultMap id="BaseResultMap" type="com.taimei.gos.model.OrderGoods">
    <id column="order_goods_id" jdbcType="INTEGER" property="orderGoodsId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="delivery_id" jdbcType="INTEGER" property="deliveryId" />
    <result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
    <result column="goods_sku_id" jdbcType="INTEGER" property="goodsSkuId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="user_price" jdbcType="BIGINT" property="userPrice" />
    <result column="express_price" jdbcType="BIGINT" property="expressPrice" />
    <result column="shipping_type" jdbcType="TINYINT" property="shippingType" />
    <result column="is_send" jdbcType="TINYINT" property="isSend" />
    <result column="send_time" jdbcType="INTEGER" property="sendTime" />
    <result column="is_confirm" jdbcType="TINYINT" property="isConfirm" />
    <result column="confirm_time" jdbcType="INTEGER" property="confirmTime" />
    <result column="is_refund" jdbcType="TINYINT" property="isRefund" />
    <result column="refund_price" jdbcType="BIGINT" property="refundPrice" />
    <result column="refund_time" jdbcType="INTEGER" property="refundTime" />
    <result column="is_profit" jdbcType="TINYINT" property="isProfit" />
    <result column="profit_time" jdbcType="INTEGER" property="profitTime" />
    <result column="is_finish" jdbcType="TINYINT" property="isFinish" />
    <result column="finish_time" jdbcType="INTEGER" property="finishTime" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="delete_time" jdbcType="INTEGER" property="deleteTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_goods_id, order_id, goods_id, delivery_id, supplier_id, goods_sku_id, quantity, 
    user_price, express_price, shipping_type, is_send, send_time, is_confirm, confirm_time, 
    is_refund, refund_price, refund_time, is_profit, profit_time, is_finish, finish_time, 
    is_delete, delete_time
  </sql>
  <select id="selectByExample" parameterType="com.taimei.gos.model.OrderGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_goods
    where order_goods_id = #{orderGoodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_goods
    where order_goods_id = #{orderGoodsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taimei.gos.model.OrderGoodsExample">
    delete from order_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taimei.gos.model.OrderGoods">
    insert into order_goods (order_goods_id, order_id, goods_id, 
      delivery_id, supplier_id, goods_sku_id, 
      quantity, user_price, express_price, 
      shipping_type, is_send, send_time, 
      is_confirm, confirm_time, is_refund, 
      refund_price, refund_time, is_profit, 
      profit_time, is_finish, finish_time, 
      is_delete, delete_time)
    values (#{orderGoodsId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{deliveryId,jdbcType=INTEGER}, #{supplierId,jdbcType=INTEGER}, #{goodsSkuId,jdbcType=INTEGER}, 
      #{quantity,jdbcType=INTEGER}, #{userPrice,jdbcType=BIGINT}, #{expressPrice,jdbcType=BIGINT}, 
      #{shippingType,jdbcType=TINYINT}, #{isSend,jdbcType=TINYINT}, #{sendTime,jdbcType=INTEGER}, 
      #{isConfirm,jdbcType=TINYINT}, #{confirmTime,jdbcType=INTEGER}, #{isRefund,jdbcType=TINYINT}, 
      #{refundPrice,jdbcType=BIGINT}, #{refundTime,jdbcType=INTEGER}, #{isProfit,jdbcType=TINYINT}, 
      #{profitTime,jdbcType=INTEGER}, #{isFinish,jdbcType=TINYINT}, #{finishTime,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=TINYINT}, #{deleteTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.taimei.gos.model.OrderGoods">
    insert into order_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderGoodsId != null">
        order_goods_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="deliveryId != null">
        delivery_id,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="goodsSkuId != null">
        goods_sku_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="userPrice != null">
        user_price,
      </if>
      <if test="expressPrice != null">
        express_price,
      </if>
      <if test="shippingType != null">
        shipping_type,
      </if>
      <if test="isSend != null">
        is_send,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="isConfirm != null">
        is_confirm,
      </if>
      <if test="confirmTime != null">
        confirm_time,
      </if>
      <if test="isRefund != null">
        is_refund,
      </if>
      <if test="refundPrice != null">
        refund_price,
      </if>
      <if test="refundTime != null">
        refund_time,
      </if>
      <if test="isProfit != null">
        is_profit,
      </if>
      <if test="profitTime != null">
        profit_time,
      </if>
      <if test="isFinish != null">
        is_finish,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderGoodsId != null">
        #{orderGoodsId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="deliveryId != null">
        #{deliveryId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="goodsSkuId != null">
        #{goodsSkuId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="userPrice != null">
        #{userPrice,jdbcType=BIGINT},
      </if>
      <if test="expressPrice != null">
        #{expressPrice,jdbcType=BIGINT},
      </if>
      <if test="shippingType != null">
        #{shippingType,jdbcType=TINYINT},
      </if>
      <if test="isSend != null">
        #{isSend,jdbcType=TINYINT},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=INTEGER},
      </if>
      <if test="isConfirm != null">
        #{isConfirm,jdbcType=TINYINT},
      </if>
      <if test="confirmTime != null">
        #{confirmTime,jdbcType=INTEGER},
      </if>
      <if test="isRefund != null">
        #{isRefund,jdbcType=TINYINT},
      </if>
      <if test="refundPrice != null">
        #{refundPrice,jdbcType=BIGINT},
      </if>
      <if test="refundTime != null">
        #{refundTime,jdbcType=INTEGER},
      </if>
      <if test="isProfit != null">
        #{isProfit,jdbcType=TINYINT},
      </if>
      <if test="profitTime != null">
        #{profitTime,jdbcType=INTEGER},
      </if>
      <if test="isFinish != null">
        #{isFinish,jdbcType=TINYINT},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taimei.gos.model.OrderGoodsExample" resultType="java.lang.Long">
    select count(*) from order_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_goods
    <set>
      <if test="record.orderGoodsId != null">
        order_goods_id = #{record.orderGoodsId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.deliveryId != null">
        delivery_id = #{record.deliveryId,jdbcType=INTEGER},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsSkuId != null">
        goods_sku_id = #{record.goodsSkuId,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.userPrice != null">
        user_price = #{record.userPrice,jdbcType=BIGINT},
      </if>
      <if test="record.expressPrice != null">
        express_price = #{record.expressPrice,jdbcType=BIGINT},
      </if>
      <if test="record.shippingType != null">
        shipping_type = #{record.shippingType,jdbcType=TINYINT},
      </if>
      <if test="record.isSend != null">
        is_send = #{record.isSend,jdbcType=TINYINT},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=INTEGER},
      </if>
      <if test="record.isConfirm != null">
        is_confirm = #{record.isConfirm,jdbcType=TINYINT},
      </if>
      <if test="record.confirmTime != null">
        confirm_time = #{record.confirmTime,jdbcType=INTEGER},
      </if>
      <if test="record.isRefund != null">
        is_refund = #{record.isRefund,jdbcType=TINYINT},
      </if>
      <if test="record.refundPrice != null">
        refund_price = #{record.refundPrice,jdbcType=BIGINT},
      </if>
      <if test="record.refundTime != null">
        refund_time = #{record.refundTime,jdbcType=INTEGER},
      </if>
      <if test="record.isProfit != null">
        is_profit = #{record.isProfit,jdbcType=TINYINT},
      </if>
      <if test="record.profitTime != null">
        profit_time = #{record.profitTime,jdbcType=INTEGER},
      </if>
      <if test="record.isFinish != null">
        is_finish = #{record.isFinish,jdbcType=TINYINT},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_goods
    set order_goods_id = #{record.orderGoodsId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      delivery_id = #{record.deliveryId,jdbcType=INTEGER},
      supplier_id = #{record.supplierId,jdbcType=INTEGER},
      goods_sku_id = #{record.goodsSkuId,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      user_price = #{record.userPrice,jdbcType=BIGINT},
      express_price = #{record.expressPrice,jdbcType=BIGINT},
      shipping_type = #{record.shippingType,jdbcType=TINYINT},
      is_send = #{record.isSend,jdbcType=TINYINT},
      send_time = #{record.sendTime,jdbcType=INTEGER},
      is_confirm = #{record.isConfirm,jdbcType=TINYINT},
      confirm_time = #{record.confirmTime,jdbcType=INTEGER},
      is_refund = #{record.isRefund,jdbcType=TINYINT},
      refund_price = #{record.refundPrice,jdbcType=BIGINT},
      refund_time = #{record.refundTime,jdbcType=INTEGER},
      is_profit = #{record.isProfit,jdbcType=TINYINT},
      profit_time = #{record.profitTime,jdbcType=INTEGER},
      is_finish = #{record.isFinish,jdbcType=TINYINT},
      finish_time = #{record.finishTime,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      delete_time = #{record.deleteTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taimei.gos.model.OrderGoods">
    update order_goods
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="deliveryId != null">
        delivery_id = #{deliveryId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="goodsSkuId != null">
        goods_sku_id = #{goodsSkuId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="userPrice != null">
        user_price = #{userPrice,jdbcType=BIGINT},
      </if>
      <if test="expressPrice != null">
        express_price = #{expressPrice,jdbcType=BIGINT},
      </if>
      <if test="shippingType != null">
        shipping_type = #{shippingType,jdbcType=TINYINT},
      </if>
      <if test="isSend != null">
        is_send = #{isSend,jdbcType=TINYINT},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=INTEGER},
      </if>
      <if test="isConfirm != null">
        is_confirm = #{isConfirm,jdbcType=TINYINT},
      </if>
      <if test="confirmTime != null">
        confirm_time = #{confirmTime,jdbcType=INTEGER},
      </if>
      <if test="isRefund != null">
        is_refund = #{isRefund,jdbcType=TINYINT},
      </if>
      <if test="refundPrice != null">
        refund_price = #{refundPrice,jdbcType=BIGINT},
      </if>
      <if test="refundTime != null">
        refund_time = #{refundTime,jdbcType=INTEGER},
      </if>
      <if test="isProfit != null">
        is_profit = #{isProfit,jdbcType=TINYINT},
      </if>
      <if test="profitTime != null">
        profit_time = #{profitTime,jdbcType=INTEGER},
      </if>
      <if test="isFinish != null">
        is_finish = #{isFinish,jdbcType=TINYINT},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=INTEGER},
      </if>
    </set>
    where order_goods_id = #{orderGoodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taimei.gos.model.OrderGoods">
    update order_goods
    set order_id = #{orderId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      delivery_id = #{deliveryId,jdbcType=INTEGER},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      goods_sku_id = #{goodsSkuId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      user_price = #{userPrice,jdbcType=BIGINT},
      express_price = #{expressPrice,jdbcType=BIGINT},
      shipping_type = #{shippingType,jdbcType=TINYINT},
      is_send = #{isSend,jdbcType=TINYINT},
      send_time = #{sendTime,jdbcType=INTEGER},
      is_confirm = #{isConfirm,jdbcType=TINYINT},
      confirm_time = #{confirmTime,jdbcType=INTEGER},
      is_refund = #{isRefund,jdbcType=TINYINT},
      refund_price = #{refundPrice,jdbcType=BIGINT},
      refund_time = #{refundTime,jdbcType=INTEGER},
      is_profit = #{isProfit,jdbcType=TINYINT},
      profit_time = #{profitTime,jdbcType=INTEGER},
      is_finish = #{isFinish,jdbcType=TINYINT},
      finish_time = #{finishTime,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT},
      delete_time = #{deleteTime,jdbcType=INTEGER}
    where order_goods_id = #{orderGoodsId,jdbcType=INTEGER}
  </update>
</mapper>