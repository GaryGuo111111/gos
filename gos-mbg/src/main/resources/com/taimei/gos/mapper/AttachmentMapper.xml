<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taimei.gos.mapper.AttachmentMapper">
  <resultMap id="BaseResultMap" type="com.taimei.gos.model.Attachment">
    <id column="attachment_id" jdbcType="INTEGER" property="attachmentId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="bucket" jdbcType="VARCHAR" property="bucket" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="ext_name" jdbcType="VARCHAR" property="extName" />
    <result column="content_type" jdbcType="VARCHAR" property="contentType" />
    <result column="is_private" jdbcType="TINYINT" property="isPrivate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="URL" jdbcType="VARCHAR" property="url" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    attachment_id, user_id, bucket, file_name, ext_name, content_type, is_private, status, 
    create_time, URL
  </sql>
  <select id="selectByExample" parameterType="com.taimei.gos.model.AttachmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attachment
    where attachment_id = #{attachmentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from attachment
    where attachment_id = #{attachmentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taimei.gos.model.AttachmentExample">
    delete from attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taimei.gos.model.Attachment">
    insert into attachment (attachment_id, user_id, bucket, 
      file_name, ext_name, content_type, 
      is_private, status, create_time, 
      URL)
    values (#{attachmentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bucket,jdbcType=VARCHAR}, 
      #{fileName,jdbcType=VARCHAR}, #{extName,jdbcType=VARCHAR}, #{contentType,jdbcType=VARCHAR}, 
      #{isPrivate,jdbcType=TINYINT}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER}, 
      #{url,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.taimei.gos.model.Attachment">
    insert into attachment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attachmentId != null">
        attachment_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="bucket != null">
        bucket,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="extName != null">
        ext_name,
      </if>
      <if test="contentType != null">
        content_type,
      </if>
      <if test="isPrivate != null">
        is_private,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="url != null">
        URL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attachmentId != null">
        #{attachmentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bucket != null">
        #{bucket,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="extName != null">
        #{extName,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="isPrivate != null">
        #{isPrivate,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taimei.gos.model.AttachmentExample" resultType="java.lang.Long">
    select count(*) from attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update attachment
    <set>
      <if test="record.attachmentId != null">
        attachment_id = #{record.attachmentId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bucket != null">
        bucket = #{record.bucket,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.extName != null">
        ext_name = #{record.extName,jdbcType=VARCHAR},
      </if>
      <if test="record.contentType != null">
        content_type = #{record.contentType,jdbcType=VARCHAR},
      </if>
      <if test="record.isPrivate != null">
        is_private = #{record.isPrivate,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        URL = #{record.url,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update attachment
    set attachment_id = #{record.attachmentId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      bucket = #{record.bucket,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      ext_name = #{record.extName,jdbcType=VARCHAR},
      content_type = #{record.contentType,jdbcType=VARCHAR},
      is_private = #{record.isPrivate,jdbcType=TINYINT},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=INTEGER},
      URL = #{record.url,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taimei.gos.model.Attachment">
    update attachment
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bucket != null">
        bucket = #{bucket,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="extName != null">
        ext_name = #{extName,jdbcType=VARCHAR},
      </if>
      <if test="contentType != null">
        content_type = #{contentType,jdbcType=VARCHAR},
      </if>
      <if test="isPrivate != null">
        is_private = #{isPrivate,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        URL = #{url,jdbcType=VARCHAR},
      </if>
    </set>
    where attachment_id = #{attachmentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taimei.gos.model.Attachment">
    update attachment
    set user_id = #{userId,jdbcType=INTEGER},
      bucket = #{bucket,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      ext_name = #{extName,jdbcType=VARCHAR},
      content_type = #{contentType,jdbcType=VARCHAR},
      is_private = #{isPrivate,jdbcType=TINYINT},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      URL = #{url,jdbcType=VARCHAR}
    where attachment_id = #{attachmentId,jdbcType=INTEGER}
  </update>
</mapper>