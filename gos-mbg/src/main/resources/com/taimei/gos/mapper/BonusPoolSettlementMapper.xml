<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taimei.gos.mapper.BonusPoolSettlementMapper">
  <resultMap id="BaseResultMap" type="com.taimei.gos.model.BonusPoolSettlement">
    <id column="bonus_pool_settlement_id" jdbcType="INTEGER" property="bonusPoolSettlementId" />
    <result column="bonus_pool_id" jdbcType="INTEGER" property="bonusPoolId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="assemble_amount" jdbcType="INTEGER" property="assembleAmount" />
    <result column="bonus_amount" jdbcType="BIGINT" property="bonusAmount" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bonus_pool_settlement_id, bonus_pool_id, user_id, assemble_amount, bonus_amount, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="com.taimei.gos.model.BonusPoolSettlementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bonus_pool_settlement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bonus_pool_settlement
    where bonus_pool_settlement_id = #{bonusPoolSettlementId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bonus_pool_settlement
    where bonus_pool_settlement_id = #{bonusPoolSettlementId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taimei.gos.model.BonusPoolSettlementExample">
    delete from bonus_pool_settlement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taimei.gos.model.BonusPoolSettlement">
    insert into bonus_pool_settlement (bonus_pool_settlement_id, bonus_pool_id, 
      user_id, assemble_amount, bonus_amount, 
      create_time)
    values (#{bonusPoolSettlementId,jdbcType=INTEGER}, #{bonusPoolId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{assembleAmount,jdbcType=INTEGER}, #{bonusAmount,jdbcType=BIGINT}, 
      #{createTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.taimei.gos.model.BonusPoolSettlement">
    insert into bonus_pool_settlement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bonusPoolSettlementId != null">
        bonus_pool_settlement_id,
      </if>
      <if test="bonusPoolId != null">
        bonus_pool_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="assembleAmount != null">
        assemble_amount,
      </if>
      <if test="bonusAmount != null">
        bonus_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bonusPoolSettlementId != null">
        #{bonusPoolSettlementId,jdbcType=INTEGER},
      </if>
      <if test="bonusPoolId != null">
        #{bonusPoolId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="assembleAmount != null">
        #{assembleAmount,jdbcType=INTEGER},
      </if>
      <if test="bonusAmount != null">
        #{bonusAmount,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taimei.gos.model.BonusPoolSettlementExample" resultType="java.lang.Long">
    select count(*) from bonus_pool_settlement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bonus_pool_settlement
    <set>
      <if test="record.bonusPoolSettlementId != null">
        bonus_pool_settlement_id = #{record.bonusPoolSettlementId,jdbcType=INTEGER},
      </if>
      <if test="record.bonusPoolId != null">
        bonus_pool_id = #{record.bonusPoolId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.assembleAmount != null">
        assemble_amount = #{record.assembleAmount,jdbcType=INTEGER},
      </if>
      <if test="record.bonusAmount != null">
        bonus_amount = #{record.bonusAmount,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bonus_pool_settlement
    set bonus_pool_settlement_id = #{record.bonusPoolSettlementId,jdbcType=INTEGER},
      bonus_pool_id = #{record.bonusPoolId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      assemble_amount = #{record.assembleAmount,jdbcType=INTEGER},
      bonus_amount = #{record.bonusAmount,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taimei.gos.model.BonusPoolSettlement">
    update bonus_pool_settlement
    <set>
      <if test="bonusPoolId != null">
        bonus_pool_id = #{bonusPoolId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="assembleAmount != null">
        assemble_amount = #{assembleAmount,jdbcType=INTEGER},
      </if>
      <if test="bonusAmount != null">
        bonus_amount = #{bonusAmount,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
    </set>
    where bonus_pool_settlement_id = #{bonusPoolSettlementId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taimei.gos.model.BonusPoolSettlement">
    update bonus_pool_settlement
    set bonus_pool_id = #{bonusPoolId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      assemble_amount = #{assembleAmount,jdbcType=INTEGER},
      bonus_amount = #{bonusAmount,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=INTEGER}
    where bonus_pool_settlement_id = #{bonusPoolSettlementId,jdbcType=INTEGER}
  </update>
</mapper>