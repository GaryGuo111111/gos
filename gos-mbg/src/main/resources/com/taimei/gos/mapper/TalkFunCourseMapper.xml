<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taimei.gos.mapper.TalkFunCourseMapper">
  <resultMap id="BaseResultMap" type="com.taimei.gos.model.TalkFunCourse">
    <id column="talk_fun_course_id" jdbcType="INTEGER" property="talkFunCourseId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="start_time" jdbcType="INTEGER" property="startTime" />
    <result column="end_time" jdbcType="INTEGER" property="endTime" />
    <result column="is_approved" jdbcType="INTEGER" property="isApproved" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.taimei.gos.model.TalkFunCourse">
    <result column="course_id" jdbcType="LONGVARCHAR" property="courseId" />
    <result column="course_name" jdbcType="LONGVARCHAR" property="courseName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    talk_fun_course_id, user_id, start_time, end_time, is_approved, is_delete
  </sql>
  <sql id="Blob_Column_List">
    course_id, course_name
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.taimei.gos.model.TalkFunCourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from talk_fun_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.taimei.gos.model.TalkFunCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from talk_fun_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from talk_fun_course
    where talk_fun_course_id = #{talkFunCourseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from talk_fun_course
    where talk_fun_course_id = #{talkFunCourseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taimei.gos.model.TalkFunCourseExample">
    delete from talk_fun_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taimei.gos.model.TalkFunCourse">
    insert into talk_fun_course (talk_fun_course_id, user_id, start_time, 
      end_time, is_approved, is_delete, 
      course_id, course_name)
    values (#{talkFunCourseId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{startTime,jdbcType=INTEGER}, 
      #{endTime,jdbcType=INTEGER}, #{isApproved,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, 
      #{courseId,jdbcType=LONGVARCHAR}, #{courseName,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.taimei.gos.model.TalkFunCourse">
    insert into talk_fun_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="talkFunCourseId != null">
        talk_fun_course_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="isApproved != null">
        is_approved,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="talkFunCourseId != null">
        #{talkFunCourseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=INTEGER},
      </if>
      <if test="isApproved != null">
        #{isApproved,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=LONGVARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taimei.gos.model.TalkFunCourseExample" resultType="java.lang.Long">
    select count(*) from talk_fun_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update talk_fun_course
    <set>
      <if test="record.talkFunCourseId != null">
        talk_fun_course_id = #{record.talkFunCourseId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=INTEGER},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=INTEGER},
      </if>
      <if test="record.isApproved != null">
        is_approved = #{record.isApproved,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update talk_fun_course
    set talk_fun_course_id = #{record.talkFunCourseId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=INTEGER},
      end_time = #{record.endTime,jdbcType=INTEGER},
      is_approved = #{record.isApproved,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=LONGVARCHAR},
      course_name = #{record.courseName,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update talk_fun_course
    set talk_fun_course_id = #{record.talkFunCourseId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=INTEGER},
      end_time = #{record.endTime,jdbcType=INTEGER},
      is_approved = #{record.isApproved,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taimei.gos.model.TalkFunCourse">
    update talk_fun_course
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=INTEGER},
      </if>
      <if test="isApproved != null">
        is_approved = #{isApproved,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=LONGVARCHAR},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where talk_fun_course_id = #{talkFunCourseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.taimei.gos.model.TalkFunCourse">
    update talk_fun_course
    set user_id = #{userId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=INTEGER},
      is_approved = #{isApproved,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=LONGVARCHAR},
      course_name = #{courseName,jdbcType=LONGVARCHAR}
    where talk_fun_course_id = #{talkFunCourseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taimei.gos.model.TalkFunCourse">
    update talk_fun_course
    set user_id = #{userId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=INTEGER},
      is_approved = #{isApproved,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where talk_fun_course_id = #{talkFunCourseId,jdbcType=INTEGER}
  </update>
</mapper>