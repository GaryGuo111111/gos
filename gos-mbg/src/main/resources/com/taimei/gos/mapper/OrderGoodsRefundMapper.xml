<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taimei.gos.mapper.OrderGoodsRefundMapper">
  <resultMap id="BaseResultMap" type="com.taimei.gos.model.OrderGoodsRefund">
    <id column="order_goods_id" jdbcType="INTEGER" property="orderGoodsId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="refund_order_no" jdbcType="VARCHAR" property="refundOrderNo" />
    <result column="is_refund_price" jdbcType="BIT" property="isRefundPrice" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="is_user_send" jdbcType="BIT" property="isUserSend" />
    <result column="user_send_time" jdbcType="INTEGER" property="userSendTime" />
    <result column="sys_express_id" jdbcType="INTEGER" property="sysExpressId" />
    <result column="express_no" jdbcType="VARCHAR" property="expressNo" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="response_time" jdbcType="INTEGER" property="responseTime" />
    <result column="is_refund_goods" jdbcType="BIT" property="isRefundGoods" />
    <result column="is_exchange_goods" jdbcType="BIT" property="isExchangeGoods" />
    <result column="refund_admin_id" jdbcType="INTEGER" property="refundAdminId" />
    <result column="to_customer_remark" jdbcType="VARCHAR" property="toCustomerRemark" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.taimei.gos.model.OrderGoodsRefund">
    <result column="picture_list" jdbcType="LONGVARCHAR" property="pictureList" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_goods_id, description, refund_order_no, is_refund_price, price, is_user_send, 
    user_send_time, sys_express_id, express_no, status, response_time, is_refund_goods, 
    is_exchange_goods, refund_admin_id, to_customer_remark, remark
  </sql>
  <sql id="Blob_Column_List">
    picture_list
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.taimei.gos.model.OrderGoodsRefundExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_goods_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.taimei.gos.model.OrderGoodsRefundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_goods_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_goods_refund
    where order_goods_id = #{orderGoodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_goods_refund
    where order_goods_id = #{orderGoodsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taimei.gos.model.OrderGoodsRefundExample">
    delete from order_goods_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taimei.gos.model.OrderGoodsRefund">
    insert into order_goods_refund (order_goods_id, description, refund_order_no, 
      is_refund_price, price, is_user_send, 
      user_send_time, sys_express_id, express_no, 
      status, response_time, is_refund_goods, 
      is_exchange_goods, refund_admin_id, to_customer_remark, 
      remark, picture_list)
    values (#{orderGoodsId,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{refundOrderNo,jdbcType=VARCHAR}, 
      #{isRefundPrice,jdbcType=BIT}, #{price,jdbcType=BIGINT}, #{isUserSend,jdbcType=BIT}, 
      #{userSendTime,jdbcType=INTEGER}, #{sysExpressId,jdbcType=INTEGER}, #{expressNo,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{responseTime,jdbcType=INTEGER}, #{isRefundGoods,jdbcType=BIT}, 
      #{isExchangeGoods,jdbcType=BIT}, #{refundAdminId,jdbcType=INTEGER}, #{toCustomerRemark,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{pictureList,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.taimei.gos.model.OrderGoodsRefund">
    insert into order_goods_refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderGoodsId != null">
        order_goods_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="refundOrderNo != null">
        refund_order_no,
      </if>
      <if test="isRefundPrice != null">
        is_refund_price,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="isUserSend != null">
        is_user_send,
      </if>
      <if test="userSendTime != null">
        user_send_time,
      </if>
      <if test="sysExpressId != null">
        sys_express_id,
      </if>
      <if test="expressNo != null">
        express_no,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="responseTime != null">
        response_time,
      </if>
      <if test="isRefundGoods != null">
        is_refund_goods,
      </if>
      <if test="isExchangeGoods != null">
        is_exchange_goods,
      </if>
      <if test="refundAdminId != null">
        refund_admin_id,
      </if>
      <if test="toCustomerRemark != null">
        to_customer_remark,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="pictureList != null">
        picture_list,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderGoodsId != null">
        #{orderGoodsId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="refundOrderNo != null">
        #{refundOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="isRefundPrice != null">
        #{isRefundPrice,jdbcType=BIT},
      </if>
      <if test="price != null">
        #{price,jdbcType=BIGINT},
      </if>
      <if test="isUserSend != null">
        #{isUserSend,jdbcType=BIT},
      </if>
      <if test="userSendTime != null">
        #{userSendTime,jdbcType=INTEGER},
      </if>
      <if test="sysExpressId != null">
        #{sysExpressId,jdbcType=INTEGER},
      </if>
      <if test="expressNo != null">
        #{expressNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="responseTime != null">
        #{responseTime,jdbcType=INTEGER},
      </if>
      <if test="isRefundGoods != null">
        #{isRefundGoods,jdbcType=BIT},
      </if>
      <if test="isExchangeGoods != null">
        #{isExchangeGoods,jdbcType=BIT},
      </if>
      <if test="refundAdminId != null">
        #{refundAdminId,jdbcType=INTEGER},
      </if>
      <if test="toCustomerRemark != null">
        #{toCustomerRemark,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="pictureList != null">
        #{pictureList,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taimei.gos.model.OrderGoodsRefundExample" resultType="java.lang.Long">
    select count(*) from order_goods_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_goods_refund
    <set>
      <if test="record.orderGoodsId != null">
        order_goods_id = #{record.orderGoodsId,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.refundOrderNo != null">
        refund_order_no = #{record.refundOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.isRefundPrice != null">
        is_refund_price = #{record.isRefundPrice,jdbcType=BIT},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=BIGINT},
      </if>
      <if test="record.isUserSend != null">
        is_user_send = #{record.isUserSend,jdbcType=BIT},
      </if>
      <if test="record.userSendTime != null">
        user_send_time = #{record.userSendTime,jdbcType=INTEGER},
      </if>
      <if test="record.sysExpressId != null">
        sys_express_id = #{record.sysExpressId,jdbcType=INTEGER},
      </if>
      <if test="record.expressNo != null">
        express_no = #{record.expressNo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.responseTime != null">
        response_time = #{record.responseTime,jdbcType=INTEGER},
      </if>
      <if test="record.isRefundGoods != null">
        is_refund_goods = #{record.isRefundGoods,jdbcType=BIT},
      </if>
      <if test="record.isExchangeGoods != null">
        is_exchange_goods = #{record.isExchangeGoods,jdbcType=BIT},
      </if>
      <if test="record.refundAdminId != null">
        refund_admin_id = #{record.refundAdminId,jdbcType=INTEGER},
      </if>
      <if test="record.toCustomerRemark != null">
        to_customer_remark = #{record.toCustomerRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.pictureList != null">
        picture_list = #{record.pictureList,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update order_goods_refund
    set order_goods_id = #{record.orderGoodsId,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      refund_order_no = #{record.refundOrderNo,jdbcType=VARCHAR},
      is_refund_price = #{record.isRefundPrice,jdbcType=BIT},
      price = #{record.price,jdbcType=BIGINT},
      is_user_send = #{record.isUserSend,jdbcType=BIT},
      user_send_time = #{record.userSendTime,jdbcType=INTEGER},
      sys_express_id = #{record.sysExpressId,jdbcType=INTEGER},
      express_no = #{record.expressNo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      response_time = #{record.responseTime,jdbcType=INTEGER},
      is_refund_goods = #{record.isRefundGoods,jdbcType=BIT},
      is_exchange_goods = #{record.isExchangeGoods,jdbcType=BIT},
      refund_admin_id = #{record.refundAdminId,jdbcType=INTEGER},
      to_customer_remark = #{record.toCustomerRemark,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      picture_list = #{record.pictureList,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_goods_refund
    set order_goods_id = #{record.orderGoodsId,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      refund_order_no = #{record.refundOrderNo,jdbcType=VARCHAR},
      is_refund_price = #{record.isRefundPrice,jdbcType=BIT},
      price = #{record.price,jdbcType=BIGINT},
      is_user_send = #{record.isUserSend,jdbcType=BIT},
      user_send_time = #{record.userSendTime,jdbcType=INTEGER},
      sys_express_id = #{record.sysExpressId,jdbcType=INTEGER},
      express_no = #{record.expressNo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      response_time = #{record.responseTime,jdbcType=INTEGER},
      is_refund_goods = #{record.isRefundGoods,jdbcType=BIT},
      is_exchange_goods = #{record.isExchangeGoods,jdbcType=BIT},
      refund_admin_id = #{record.refundAdminId,jdbcType=INTEGER},
      to_customer_remark = #{record.toCustomerRemark,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taimei.gos.model.OrderGoodsRefund">
    update order_goods_refund
    <set>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="refundOrderNo != null">
        refund_order_no = #{refundOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="isRefundPrice != null">
        is_refund_price = #{isRefundPrice,jdbcType=BIT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="isUserSend != null">
        is_user_send = #{isUserSend,jdbcType=BIT},
      </if>
      <if test="userSendTime != null">
        user_send_time = #{userSendTime,jdbcType=INTEGER},
      </if>
      <if test="sysExpressId != null">
        sys_express_id = #{sysExpressId,jdbcType=INTEGER},
      </if>
      <if test="expressNo != null">
        express_no = #{expressNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="responseTime != null">
        response_time = #{responseTime,jdbcType=INTEGER},
      </if>
      <if test="isRefundGoods != null">
        is_refund_goods = #{isRefundGoods,jdbcType=BIT},
      </if>
      <if test="isExchangeGoods != null">
        is_exchange_goods = #{isExchangeGoods,jdbcType=BIT},
      </if>
      <if test="refundAdminId != null">
        refund_admin_id = #{refundAdminId,jdbcType=INTEGER},
      </if>
      <if test="toCustomerRemark != null">
        to_customer_remark = #{toCustomerRemark,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="pictureList != null">
        picture_list = #{pictureList,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where order_goods_id = #{orderGoodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.taimei.gos.model.OrderGoodsRefund">
    update order_goods_refund
    set description = #{description,jdbcType=VARCHAR},
      refund_order_no = #{refundOrderNo,jdbcType=VARCHAR},
      is_refund_price = #{isRefundPrice,jdbcType=BIT},
      price = #{price,jdbcType=BIGINT},
      is_user_send = #{isUserSend,jdbcType=BIT},
      user_send_time = #{userSendTime,jdbcType=INTEGER},
      sys_express_id = #{sysExpressId,jdbcType=INTEGER},
      express_no = #{expressNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      response_time = #{responseTime,jdbcType=INTEGER},
      is_refund_goods = #{isRefundGoods,jdbcType=BIT},
      is_exchange_goods = #{isExchangeGoods,jdbcType=BIT},
      refund_admin_id = #{refundAdminId,jdbcType=INTEGER},
      to_customer_remark = #{toCustomerRemark,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      picture_list = #{pictureList,jdbcType=LONGVARCHAR}
    where order_goods_id = #{orderGoodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taimei.gos.model.OrderGoodsRefund">
    update order_goods_refund
    set description = #{description,jdbcType=VARCHAR},
      refund_order_no = #{refundOrderNo,jdbcType=VARCHAR},
      is_refund_price = #{isRefundPrice,jdbcType=BIT},
      price = #{price,jdbcType=BIGINT},
      is_user_send = #{isUserSend,jdbcType=BIT},
      user_send_time = #{userSendTime,jdbcType=INTEGER},
      sys_express_id = #{sysExpressId,jdbcType=INTEGER},
      express_no = #{expressNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      response_time = #{responseTime,jdbcType=INTEGER},
      is_refund_goods = #{isRefundGoods,jdbcType=BIT},
      is_exchange_goods = #{isExchangeGoods,jdbcType=BIT},
      refund_admin_id = #{refundAdminId,jdbcType=INTEGER},
      to_customer_remark = #{toCustomerRemark,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where order_goods_id = #{orderGoodsId,jdbcType=INTEGER}
  </update>
</mapper>