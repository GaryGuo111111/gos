<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taimei.gos.mapper.RulesUserLevelLogMapper">
  <resultMap id="BaseResultMap" type="com.taimei.gos.model.RulesUserLevelLog">
    <id column="up_level_log_id" jdbcType="INTEGER" property="upLevelLogId" />
    <result column="before_level" jdbcType="INTEGER" property="beforeLevel" />
    <result column="after_level" jdbcType="INTEGER" property="afterLevel" />
    <result column="level_type" jdbcType="TINYINT" property="levelType" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    up_level_log_id, before_level, after_level, level_type, create_time, user_id
  </sql>
  <select id="selectByExample" parameterType="com.taimei.gos.model.RulesUserLevelLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rules_user_level_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rules_user_level_log
    where up_level_log_id = #{upLevelLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rules_user_level_log
    where up_level_log_id = #{upLevelLogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taimei.gos.model.RulesUserLevelLogExample">
    delete from rules_user_level_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taimei.gos.model.RulesUserLevelLog">
    insert into rules_user_level_log (up_level_log_id, before_level, after_level, 
      level_type, create_time, user_id
      )
    values (#{upLevelLogId,jdbcType=INTEGER}, #{beforeLevel,jdbcType=INTEGER}, #{afterLevel,jdbcType=INTEGER}, 
      #{levelType,jdbcType=TINYINT}, #{createTime,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taimei.gos.model.RulesUserLevelLog">
    insert into rules_user_level_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="upLevelLogId != null">
        up_level_log_id,
      </if>
      <if test="beforeLevel != null">
        before_level,
      </if>
      <if test="afterLevel != null">
        after_level,
      </if>
      <if test="levelType != null">
        level_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="upLevelLogId != null">
        #{upLevelLogId,jdbcType=INTEGER},
      </if>
      <if test="beforeLevel != null">
        #{beforeLevel,jdbcType=INTEGER},
      </if>
      <if test="afterLevel != null">
        #{afterLevel,jdbcType=INTEGER},
      </if>
      <if test="levelType != null">
        #{levelType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taimei.gos.model.RulesUserLevelLogExample" resultType="java.lang.Long">
    select count(*) from rules_user_level_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rules_user_level_log
    <set>
      <if test="record.upLevelLogId != null">
        up_level_log_id = #{record.upLevelLogId,jdbcType=INTEGER},
      </if>
      <if test="record.beforeLevel != null">
        before_level = #{record.beforeLevel,jdbcType=INTEGER},
      </if>
      <if test="record.afterLevel != null">
        after_level = #{record.afterLevel,jdbcType=INTEGER},
      </if>
      <if test="record.levelType != null">
        level_type = #{record.levelType,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rules_user_level_log
    set up_level_log_id = #{record.upLevelLogId,jdbcType=INTEGER},
      before_level = #{record.beforeLevel,jdbcType=INTEGER},
      after_level = #{record.afterLevel,jdbcType=INTEGER},
      level_type = #{record.levelType,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taimei.gos.model.RulesUserLevelLog">
    update rules_user_level_log
    <set>
      <if test="beforeLevel != null">
        before_level = #{beforeLevel,jdbcType=INTEGER},
      </if>
      <if test="afterLevel != null">
        after_level = #{afterLevel,jdbcType=INTEGER},
      </if>
      <if test="levelType != null">
        level_type = #{levelType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where up_level_log_id = #{upLevelLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taimei.gos.model.RulesUserLevelLog">
    update rules_user_level_log
    set before_level = #{beforeLevel,jdbcType=INTEGER},
      after_level = #{afterLevel,jdbcType=INTEGER},
      level_type = #{levelType,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where up_level_log_id = #{upLevelLogId,jdbcType=INTEGER}
  </update>
</mapper>