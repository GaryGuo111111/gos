<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taimei.gos.mapper.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.taimei.gos.model.Orders">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="buy_level_id" jdbcType="INTEGER" property="buyLevelId" />
    <result column="referrer_id" jdbcType="INTEGER" property="referrerId" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="market_price_sum" jdbcType="BIGINT" property="marketPriceSum" />
    <result column="user_price_sum" jdbcType="BIGINT" property="userPriceSum" />
    <result column="express_price" jdbcType="BIGINT" property="expressPrice" />
    <result column="pay_price" jdbcType="BIGINT" property="payPrice" />
    <result column="pay_type" jdbcType="TINYINT" property="payType" />
    <result column="is_pay" jdbcType="BIT" property="isPay" />
    <result column="pay_time" jdbcType="INTEGER" property="payTime" />
    <result column="payee_id" jdbcType="VARCHAR" property="payeeId" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="delete_time" jdbcType="INTEGER" property="deleteTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, order_no, user_id, buy_level_id, referrer_id, create_time, market_price_sum, 
    user_price_sum, express_price, pay_price, pay_type, is_pay, pay_time, payee_id, is_delete, 
    delete_time, remark
  </sql>
  <select id="selectByExample" parameterType="com.taimei.gos.model.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taimei.gos.model.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taimei.gos.model.Orders">
    insert into orders (order_id, order_no, user_id, 
      buy_level_id, referrer_id, create_time, 
      market_price_sum, user_price_sum, express_price, 
      pay_price, pay_type, is_pay, 
      pay_time, payee_id, is_delete, 
      delete_time, remark)
    values (#{orderId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{buyLevelId,jdbcType=INTEGER}, #{referrerId,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER}, 
      #{marketPriceSum,jdbcType=BIGINT}, #{userPriceSum,jdbcType=BIGINT}, #{expressPrice,jdbcType=BIGINT}, 
      #{payPrice,jdbcType=BIGINT}, #{payType,jdbcType=TINYINT}, #{isPay,jdbcType=BIT}, 
      #{payTime,jdbcType=INTEGER}, #{payeeId,jdbcType=VARCHAR}, #{isDelete,jdbcType=BIT}, 
      #{deleteTime,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.taimei.gos.model.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="buyLevelId != null">
        buy_level_id,
      </if>
      <if test="referrerId != null">
        referrer_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="marketPriceSum != null">
        market_price_sum,
      </if>
      <if test="userPriceSum != null">
        user_price_sum,
      </if>
      <if test="expressPrice != null">
        express_price,
      </if>
      <if test="payPrice != null">
        pay_price,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="isPay != null">
        is_pay,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="payeeId != null">
        payee_id,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="buyLevelId != null">
        #{buyLevelId,jdbcType=INTEGER},
      </if>
      <if test="referrerId != null">
        #{referrerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="marketPriceSum != null">
        #{marketPriceSum,jdbcType=BIGINT},
      </if>
      <if test="userPriceSum != null">
        #{userPriceSum,jdbcType=BIGINT},
      </if>
      <if test="expressPrice != null">
        #{expressPrice,jdbcType=BIGINT},
      </if>
      <if test="payPrice != null">
        #{payPrice,jdbcType=BIGINT},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="isPay != null">
        #{isPay,jdbcType=BIT},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=INTEGER},
      </if>
      <if test="payeeId != null">
        #{payeeId,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taimei.gos.model.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.buyLevelId != null">
        buy_level_id = #{record.buyLevelId,jdbcType=INTEGER},
      </if>
      <if test="record.referrerId != null">
        referrer_id = #{record.referrerId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.marketPriceSum != null">
        market_price_sum = #{record.marketPriceSum,jdbcType=BIGINT},
      </if>
      <if test="record.userPriceSum != null">
        user_price_sum = #{record.userPriceSum,jdbcType=BIGINT},
      </if>
      <if test="record.expressPrice != null">
        express_price = #{record.expressPrice,jdbcType=BIGINT},
      </if>
      <if test="record.payPrice != null">
        pay_price = #{record.payPrice,jdbcType=BIGINT},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=TINYINT},
      </if>
      <if test="record.isPay != null">
        is_pay = #{record.isPay,jdbcType=BIT},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=INTEGER},
      </if>
      <if test="record.payeeId != null">
        payee_id = #{record.payeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set order_id = #{record.orderId,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      buy_level_id = #{record.buyLevelId,jdbcType=INTEGER},
      referrer_id = #{record.referrerId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=INTEGER},
      market_price_sum = #{record.marketPriceSum,jdbcType=BIGINT},
      user_price_sum = #{record.userPriceSum,jdbcType=BIGINT},
      express_price = #{record.expressPrice,jdbcType=BIGINT},
      pay_price = #{record.payPrice,jdbcType=BIGINT},
      pay_type = #{record.payType,jdbcType=TINYINT},
      is_pay = #{record.isPay,jdbcType=BIT},
      pay_time = #{record.payTime,jdbcType=INTEGER},
      payee_id = #{record.payeeId,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=BIT},
      delete_time = #{record.deleteTime,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taimei.gos.model.Orders">
    update orders
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="buyLevelId != null">
        buy_level_id = #{buyLevelId,jdbcType=INTEGER},
      </if>
      <if test="referrerId != null">
        referrer_id = #{referrerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="marketPriceSum != null">
        market_price_sum = #{marketPriceSum,jdbcType=BIGINT},
      </if>
      <if test="userPriceSum != null">
        user_price_sum = #{userPriceSum,jdbcType=BIGINT},
      </if>
      <if test="expressPrice != null">
        express_price = #{expressPrice,jdbcType=BIGINT},
      </if>
      <if test="payPrice != null">
        pay_price = #{payPrice,jdbcType=BIGINT},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="isPay != null">
        is_pay = #{isPay,jdbcType=BIT},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=INTEGER},
      </if>
      <if test="payeeId != null">
        payee_id = #{payeeId,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taimei.gos.model.Orders">
    update orders
    set order_no = #{orderNo,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      buy_level_id = #{buyLevelId,jdbcType=INTEGER},
      referrer_id = #{referrerId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      market_price_sum = #{marketPriceSum,jdbcType=BIGINT},
      user_price_sum = #{userPriceSum,jdbcType=BIGINT},
      express_price = #{expressPrice,jdbcType=BIGINT},
      pay_price = #{payPrice,jdbcType=BIGINT},
      pay_type = #{payType,jdbcType=TINYINT},
      is_pay = #{isPay,jdbcType=BIT},
      pay_time = #{payTime,jdbcType=INTEGER},
      payee_id = #{payeeId,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT},
      delete_time = #{deleteTime,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>