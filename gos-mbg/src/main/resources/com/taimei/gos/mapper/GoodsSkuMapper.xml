<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taimei.gos.mapper.GoodsSkuMapper">
  <resultMap id="BaseResultMap" type="com.taimei.gos.model.GoodsSku">
    <id column="goods_sku_id" jdbcType="INTEGER" property="goodsSkuId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="profit_template_id" jdbcType="INTEGER" property="profitTemplateId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="attribute_values" jdbcType="VARCHAR" property="attributeValues" />
    <result column="market_price" jdbcType="BIGINT" property="marketPrice" />
    <result column="discount_price" jdbcType="BIGINT" property="discountPrice" />
    <result column="cost_price" jdbcType="BIGINT" property="costPrice" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.taimei.gos.model.GoodsSku">
    <result column="pics" jdbcType="LONGVARCHAR" property="pics" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_sku_id, goods_id, profit_template_id, code, sku_name, attribute_values, market_price, 
    discount_price, cost_price, sales, stock
  </sql>
  <sql id="Blob_Column_List">
    pics
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.taimei.gos.model.GoodsSkuExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.taimei.gos.model.GoodsSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods_sku
    where goods_sku_id = #{goodsSkuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_sku
    where goods_sku_id = #{goodsSkuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taimei.gos.model.GoodsSkuExample">
    delete from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taimei.gos.model.GoodsSku">
    insert into goods_sku (goods_sku_id, goods_id, profit_template_id, 
      code, sku_name, attribute_values, 
      market_price, discount_price, cost_price, 
      sales, stock, pics
      )
    values (#{goodsSkuId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{profitTemplateId,jdbcType=INTEGER}, 
      #{code,jdbcType=VARCHAR}, #{skuName,jdbcType=VARCHAR}, #{attributeValues,jdbcType=VARCHAR}, 
      #{marketPrice,jdbcType=BIGINT}, #{discountPrice,jdbcType=BIGINT}, #{costPrice,jdbcType=BIGINT}, 
      #{sales,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, #{pics,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taimei.gos.model.GoodsSku">
    insert into goods_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsSkuId != null">
        goods_sku_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="profitTemplateId != null">
        profit_template_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="attributeValues != null">
        attribute_values,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="discountPrice != null">
        discount_price,
      </if>
      <if test="costPrice != null">
        cost_price,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="pics != null">
        pics,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsSkuId != null">
        #{goodsSkuId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="profitTemplateId != null">
        #{profitTemplateId,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="attributeValues != null">
        #{attributeValues,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=BIGINT},
      </if>
      <if test="discountPrice != null">
        #{discountPrice,jdbcType=BIGINT},
      </if>
      <if test="costPrice != null">
        #{costPrice,jdbcType=BIGINT},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="pics != null">
        #{pics,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taimei.gos.model.GoodsSkuExample" resultType="java.lang.Long">
    select count(*) from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_sku
    <set>
      <if test="record.goodsSkuId != null">
        goods_sku_id = #{record.goodsSkuId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.profitTemplateId != null">
        profit_template_id = #{record.profitTemplateId,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.skuName != null">
        sku_name = #{record.skuName,jdbcType=VARCHAR},
      </if>
      <if test="record.attributeValues != null">
        attribute_values = #{record.attributeValues,jdbcType=VARCHAR},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=BIGINT},
      </if>
      <if test="record.discountPrice != null">
        discount_price = #{record.discountPrice,jdbcType=BIGINT},
      </if>
      <if test="record.costPrice != null">
        cost_price = #{record.costPrice,jdbcType=BIGINT},
      </if>
      <if test="record.sales != null">
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.pics != null">
        pics = #{record.pics,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update goods_sku
    set goods_sku_id = #{record.goodsSkuId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      profit_template_id = #{record.profitTemplateId,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      sku_name = #{record.skuName,jdbcType=VARCHAR},
      attribute_values = #{record.attributeValues,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=BIGINT},
      discount_price = #{record.discountPrice,jdbcType=BIGINT},
      cost_price = #{record.costPrice,jdbcType=BIGINT},
      sales = #{record.sales,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER},
      pics = #{record.pics,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_sku
    set goods_sku_id = #{record.goodsSkuId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      profit_template_id = #{record.profitTemplateId,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      sku_name = #{record.skuName,jdbcType=VARCHAR},
      attribute_values = #{record.attributeValues,jdbcType=VARCHAR},
      market_price = #{record.marketPrice,jdbcType=BIGINT},
      discount_price = #{record.discountPrice,jdbcType=BIGINT},
      cost_price = #{record.costPrice,jdbcType=BIGINT},
      sales = #{record.sales,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taimei.gos.model.GoodsSku">
    update goods_sku
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="profitTemplateId != null">
        profit_template_id = #{profitTemplateId,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null">
        sku_name = #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="attributeValues != null">
        attribute_values = #{attributeValues,jdbcType=VARCHAR},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=BIGINT},
      </if>
      <if test="discountPrice != null">
        discount_price = #{discountPrice,jdbcType=BIGINT},
      </if>
      <if test="costPrice != null">
        cost_price = #{costPrice,jdbcType=BIGINT},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="pics != null">
        pics = #{pics,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where goods_sku_id = #{goodsSkuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.taimei.gos.model.GoodsSku">
    update goods_sku
    set goods_id = #{goodsId,jdbcType=INTEGER},
      profit_template_id = #{profitTemplateId,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      sku_name = #{skuName,jdbcType=VARCHAR},
      attribute_values = #{attributeValues,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=BIGINT},
      discount_price = #{discountPrice,jdbcType=BIGINT},
      cost_price = #{costPrice,jdbcType=BIGINT},
      sales = #{sales,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      pics = #{pics,jdbcType=LONGVARCHAR}
    where goods_sku_id = #{goodsSkuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taimei.gos.model.GoodsSku">
    update goods_sku
    set goods_id = #{goodsId,jdbcType=INTEGER},
      profit_template_id = #{profitTemplateId,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      sku_name = #{skuName,jdbcType=VARCHAR},
      attribute_values = #{attributeValues,jdbcType=VARCHAR},
      market_price = #{marketPrice,jdbcType=BIGINT},
      discount_price = #{discountPrice,jdbcType=BIGINT},
      cost_price = #{costPrice,jdbcType=BIGINT},
      sales = #{sales,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER}
    where goods_sku_id = #{goodsSkuId,jdbcType=INTEGER}
  </update>
</mapper>