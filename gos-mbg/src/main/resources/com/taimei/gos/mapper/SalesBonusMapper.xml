<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taimei.gos.mapper.SalesBonusMapper">
  <resultMap id="BaseResultMap" type="com.taimei.gos.model.SalesBonus">
    <id column="sales_bonus_id" jdbcType="INTEGER" property="salesBonusId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_goods_id" jdbcType="INTEGER" property="orderGoodsId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="beneficiary_id" jdbcType="INTEGER" property="beneficiaryId" />
    <result column="sales_bonus" jdbcType="BIGINT" property="salesBonus" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="is_send" jdbcType="TINYINT" property="isSend" />
    <result column="send_time" jdbcType="INTEGER" property="sendTime" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="delete_time" jdbcType="INTEGER" property="deleteTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sales_bonus_id, user_id, order_id, order_goods_id, quantity, beneficiary_id, sales_bonus, 
    type, create_time, is_send, send_time, is_delete, delete_time
  </sql>
  <select id="selectByExample" parameterType="com.taimei.gos.model.SalesBonusExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sales_bonus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sales_bonus
    where sales_bonus_id = #{salesBonusId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sales_bonus
    where sales_bonus_id = #{salesBonusId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taimei.gos.model.SalesBonusExample">
    delete from sales_bonus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taimei.gos.model.SalesBonus">
    insert into sales_bonus (sales_bonus_id, user_id, order_id, 
      order_goods_id, quantity, beneficiary_id, 
      sales_bonus, type, create_time, 
      is_send, send_time, is_delete, 
      delete_time)
    values (#{salesBonusId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, 
      #{orderGoodsId,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER}, #{beneficiaryId,jdbcType=INTEGER}, 
      #{salesBonus,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, #{createTime,jdbcType=INTEGER}, 
      #{isSend,jdbcType=TINYINT}, #{sendTime,jdbcType=INTEGER}, #{isDelete,jdbcType=TINYINT}, 
      #{deleteTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.taimei.gos.model.SalesBonus">
    insert into sales_bonus
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="salesBonusId != null">
        sales_bonus_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderGoodsId != null">
        order_goods_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="beneficiaryId != null">
        beneficiary_id,
      </if>
      <if test="salesBonus != null">
        sales_bonus,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isSend != null">
        is_send,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="salesBonusId != null">
        #{salesBonusId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderGoodsId != null">
        #{orderGoodsId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="beneficiaryId != null">
        #{beneficiaryId,jdbcType=INTEGER},
      </if>
      <if test="salesBonus != null">
        #{salesBonus,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="isSend != null">
        #{isSend,jdbcType=TINYINT},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taimei.gos.model.SalesBonusExample" resultType="java.lang.Long">
    select count(*) from sales_bonus
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sales_bonus
    <set>
      <if test="record.salesBonusId != null">
        sales_bonus_id = #{record.salesBonusId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderGoodsId != null">
        order_goods_id = #{record.orderGoodsId,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.beneficiaryId != null">
        beneficiary_id = #{record.beneficiaryId,jdbcType=INTEGER},
      </if>
      <if test="record.salesBonus != null">
        sales_bonus = #{record.salesBonus,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.isSend != null">
        is_send = #{record.isSend,jdbcType=TINYINT},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sales_bonus
    set sales_bonus_id = #{record.salesBonusId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      order_goods_id = #{record.orderGoodsId,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      beneficiary_id = #{record.beneficiaryId,jdbcType=INTEGER},
      sales_bonus = #{record.salesBonus,jdbcType=BIGINT},
      type = #{record.type,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=INTEGER},
      is_send = #{record.isSend,jdbcType=TINYINT},
      send_time = #{record.sendTime,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      delete_time = #{record.deleteTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taimei.gos.model.SalesBonus">
    update sales_bonus
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderGoodsId != null">
        order_goods_id = #{orderGoodsId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="beneficiaryId != null">
        beneficiary_id = #{beneficiaryId,jdbcType=INTEGER},
      </if>
      <if test="salesBonus != null">
        sales_bonus = #{salesBonus,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="isSend != null">
        is_send = #{isSend,jdbcType=TINYINT},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=INTEGER},
      </if>
    </set>
    where sales_bonus_id = #{salesBonusId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taimei.gos.model.SalesBonus">
    update sales_bonus
    set user_id = #{userId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      order_goods_id = #{orderGoodsId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      beneficiary_id = #{beneficiaryId,jdbcType=INTEGER},
      sales_bonus = #{salesBonus,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=INTEGER},
      is_send = #{isSend,jdbcType=TINYINT},
      send_time = #{sendTime,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=TINYINT},
      delete_time = #{deleteTime,jdbcType=INTEGER}
    where sales_bonus_id = #{salesBonusId,jdbcType=INTEGER}
  </update>
</mapper>