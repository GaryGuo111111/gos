<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taimei.gos.mapper.ProfitTemplateMapper">
  <resultMap id="BaseResultMap" type="com.taimei.gos.model.ProfitTemplate">
    <id column="profit_template_id" jdbcType="INTEGER" property="profitTemplateId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="profit_type" jdbcType="INTEGER" property="profitType" />
    <result column="L0" jdbcType="INTEGER" property="l0" />
    <result column="L1" jdbcType="INTEGER" property="l1" />
    <result column="L2" jdbcType="INTEGER" property="l2" />
    <result column="L3" jdbcType="INTEGER" property="l3" />
    <result column="L3_3" jdbcType="INTEGER" property="l33" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    profit_template_id, name, profit_type, L0, L1, L2, L3, L3_3
  </sql>
  <select id="selectByExample" parameterType="com.taimei.gos.model.ProfitTemplateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from profit_template
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from profit_template
    where profit_template_id = #{profitTemplateId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from profit_template
    where profit_template_id = #{profitTemplateId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taimei.gos.model.ProfitTemplateExample">
    delete from profit_template
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taimei.gos.model.ProfitTemplate">
    insert into profit_template (profit_template_id, name, profit_type, 
      L0, L1, L2, L3, 
      L3_3)
    values (#{profitTemplateId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{profitType,jdbcType=INTEGER}, 
      #{l0,jdbcType=INTEGER}, #{l1,jdbcType=INTEGER}, #{l2,jdbcType=INTEGER}, #{l3,jdbcType=INTEGER}, 
      #{l33,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.taimei.gos.model.ProfitTemplate">
    insert into profit_template
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="profitTemplateId != null">
        profit_template_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="profitType != null">
        profit_type,
      </if>
      <if test="l0 != null">
        L0,
      </if>
      <if test="l1 != null">
        L1,
      </if>
      <if test="l2 != null">
        L2,
      </if>
      <if test="l3 != null">
        L3,
      </if>
      <if test="l33 != null">
        L3_3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="profitTemplateId != null">
        #{profitTemplateId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="profitType != null">
        #{profitType,jdbcType=INTEGER},
      </if>
      <if test="l0 != null">
        #{l0,jdbcType=INTEGER},
      </if>
      <if test="l1 != null">
        #{l1,jdbcType=INTEGER},
      </if>
      <if test="l2 != null">
        #{l2,jdbcType=INTEGER},
      </if>
      <if test="l3 != null">
        #{l3,jdbcType=INTEGER},
      </if>
      <if test="l33 != null">
        #{l33,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taimei.gos.model.ProfitTemplateExample" resultType="java.lang.Long">
    select count(*) from profit_template
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update profit_template
    <set>
      <if test="record.profitTemplateId != null">
        profit_template_id = #{record.profitTemplateId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.profitType != null">
        profit_type = #{record.profitType,jdbcType=INTEGER},
      </if>
      <if test="record.l0 != null">
        L0 = #{record.l0,jdbcType=INTEGER},
      </if>
      <if test="record.l1 != null">
        L1 = #{record.l1,jdbcType=INTEGER},
      </if>
      <if test="record.l2 != null">
        L2 = #{record.l2,jdbcType=INTEGER},
      </if>
      <if test="record.l3 != null">
        L3 = #{record.l3,jdbcType=INTEGER},
      </if>
      <if test="record.l33 != null">
        L3_3 = #{record.l33,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update profit_template
    set profit_template_id = #{record.profitTemplateId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      profit_type = #{record.profitType,jdbcType=INTEGER},
      L0 = #{record.l0,jdbcType=INTEGER},
      L1 = #{record.l1,jdbcType=INTEGER},
      L2 = #{record.l2,jdbcType=INTEGER},
      L3 = #{record.l3,jdbcType=INTEGER},
      L3_3 = #{record.l33,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taimei.gos.model.ProfitTemplate">
    update profit_template
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="profitType != null">
        profit_type = #{profitType,jdbcType=INTEGER},
      </if>
      <if test="l0 != null">
        L0 = #{l0,jdbcType=INTEGER},
      </if>
      <if test="l1 != null">
        L1 = #{l1,jdbcType=INTEGER},
      </if>
      <if test="l2 != null">
        L2 = #{l2,jdbcType=INTEGER},
      </if>
      <if test="l3 != null">
        L3 = #{l3,jdbcType=INTEGER},
      </if>
      <if test="l33 != null">
        L3_3 = #{l33,jdbcType=INTEGER},
      </if>
    </set>
    where profit_template_id = #{profitTemplateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taimei.gos.model.ProfitTemplate">
    update profit_template
    set name = #{name,jdbcType=VARCHAR},
      profit_type = #{profitType,jdbcType=INTEGER},
      L0 = #{l0,jdbcType=INTEGER},
      L1 = #{l1,jdbcType=INTEGER},
      L2 = #{l2,jdbcType=INTEGER},
      L3 = #{l3,jdbcType=INTEGER},
      L3_3 = #{l33,jdbcType=INTEGER}
    where profit_template_id = #{profitTemplateId,jdbcType=INTEGER}
  </update>
</mapper>