<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taimei.gos.mapper.UserShippingAddressMapper">
  <resultMap id="BaseResultMap" type="com.taimei.gos.model.UserShippingAddress">
    <id column="shipping_address_id" jdbcType="INTEGER" property="shippingAddressId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="is_default" jdbcType="TINYINT" property="isDefault" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="consignee" jdbcType="VARCHAR" property="consignee" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="zip_code" jdbcType="VARCHAR" property="zipCode" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    shipping_address_id, user_id, is_default, code, detail, consignee, mobile, zip_code, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="com.taimei.gos.model.UserShippingAddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_shipping_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_shipping_address
    where shipping_address_id = #{shippingAddressId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_shipping_address
    where shipping_address_id = #{shippingAddressId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taimei.gos.model.UserShippingAddressExample">
    delete from user_shipping_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taimei.gos.model.UserShippingAddress">
    insert into user_shipping_address (shipping_address_id, user_id, is_default, 
      code, detail, consignee, 
      mobile, zip_code, create_time
      )
    values (#{shippingAddressId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{isDefault,jdbcType=TINYINT}, 
      #{code,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, #{consignee,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{zipCode,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taimei.gos.model.UserShippingAddress">
    insert into user_shipping_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shippingAddressId != null">
        shipping_address_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="consignee != null">
        consignee,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="zipCode != null">
        zip_code,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shippingAddressId != null">
        #{shippingAddressId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=TINYINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="consignee != null">
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taimei.gos.model.UserShippingAddressExample" resultType="java.lang.Long">
    select count(*) from user_shipping_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_shipping_address
    <set>
      <if test="record.shippingAddressId != null">
        shipping_address_id = #{record.shippingAddressId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.isDefault != null">
        is_default = #{record.isDefault,jdbcType=TINYINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.consignee != null">
        consignee = #{record.consignee,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.zipCode != null">
        zip_code = #{record.zipCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_shipping_address
    set shipping_address_id = #{record.shippingAddressId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      is_default = #{record.isDefault,jdbcType=TINYINT},
      code = #{record.code,jdbcType=VARCHAR},
      detail = #{record.detail,jdbcType=VARCHAR},
      consignee = #{record.consignee,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      zip_code = #{record.zipCode,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taimei.gos.model.UserShippingAddress">
    update user_shipping_address
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=TINYINT},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="consignee != null">
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        zip_code = #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
    </set>
    where shipping_address_id = #{shippingAddressId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taimei.gos.model.UserShippingAddress">
    update user_shipping_address
    set user_id = #{userId,jdbcType=INTEGER},
      is_default = #{isDefault,jdbcType=TINYINT},
      code = #{code,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      consignee = #{consignee,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      zip_code = #{zipCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER}
    where shipping_address_id = #{shippingAddressId,jdbcType=INTEGER}
  </update>
</mapper>