<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taimei.gos.mapper.SupplierMapper">
  <resultMap id="BaseResultMap" type="com.taimei.gos.model.Supplier">
    <id column="supplier_id" jdbcType="INTEGER" property="supplierId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="is_brands" jdbcType="BIT" property="isBrands" />
    <result column="telphone" jdbcType="VARCHAR" property="telphone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="contacts" jdbcType="VARCHAR" property="contacts" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="business_license" jdbcType="INTEGER" property="businessLicense" />
    <result column="create_time" jdbcType="INTEGER" property="createTime" />
    <result column="last_admin_id" jdbcType="INTEGER" property="lastAdminId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    supplier_id, name, is_brands, telphone, address, contacts, bank_name, account, real_name, 
    business_license, create_time, last_admin_id, update_time
  </sql>
  <select id="selectByExample" parameterType="com.taimei.gos.model.SupplierExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from supplier
    where supplier_id = #{supplierId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from supplier
    where supplier_id = #{supplierId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taimei.gos.model.SupplierExample">
    delete from supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taimei.gos.model.Supplier">
    insert into supplier (supplier_id, name, is_brands, 
      telphone, address, contacts, 
      bank_name, account, real_name, 
      business_license, create_time, last_admin_id, 
      update_time)
    values (#{supplierId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{isBrands,jdbcType=BIT}, 
      #{telphone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{contacts,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{businessLicense,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER}, #{lastAdminId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.taimei.gos.model.Supplier">
    insert into supplier
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="isBrands != null">
        is_brands,
      </if>
      <if test="telphone != null">
        telphone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="contacts != null">
        contacts,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="businessLicense != null">
        business_license,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastAdminId != null">
        last_admin_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="isBrands != null">
        #{isBrands,jdbcType=BIT},
      </if>
      <if test="telphone != null">
        #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null">
        #{businessLicense,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="lastAdminId != null">
        #{lastAdminId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taimei.gos.model.SupplierExample" resultType="java.lang.Long">
    select count(*) from supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update supplier
    <set>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.isBrands != null">
        is_brands = #{record.isBrands,jdbcType=BIT},
      </if>
      <if test="record.telphone != null">
        telphone = #{record.telphone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.contacts != null">
        contacts = #{record.contacts,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.businessLicense != null">
        business_license = #{record.businessLicense,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.lastAdminId != null">
        last_admin_id = #{record.lastAdminId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update supplier
    set supplier_id = #{record.supplierId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      is_brands = #{record.isBrands,jdbcType=BIT},
      telphone = #{record.telphone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      contacts = #{record.contacts,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      business_license = #{record.businessLicense,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=INTEGER},
      last_admin_id = #{record.lastAdminId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taimei.gos.model.Supplier">
    update supplier
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="isBrands != null">
        is_brands = #{isBrands,jdbcType=BIT},
      </if>
      <if test="telphone != null">
        telphone = #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="businessLicense != null">
        business_license = #{businessLicense,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="lastAdminId != null">
        last_admin_id = #{lastAdminId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where supplier_id = #{supplierId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taimei.gos.model.Supplier">
    update supplier
    set name = #{name,jdbcType=VARCHAR},
      is_brands = #{isBrands,jdbcType=BIT},
      telphone = #{telphone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      business_license = #{businessLicense,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      last_admin_id = #{lastAdminId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where supplier_id = #{supplierId,jdbcType=INTEGER}
  </update>
</mapper>